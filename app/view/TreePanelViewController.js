/*
 * File: app/view/TreePanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SD.view.TreePanelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.treepanel',

    onTreeMenuBeforeRender: function(component, eOpts) {
        component.setLoading(true);
        var ghUtil = Ext.create('SD.view.GitHubWrapper', {});
        var treeData = ghUtil.getTree('master',function(tree,component){
            var treePnl =   Ext.ComponentQuery.query('[itemId=menuPanel]')[0];
            var st = treePnl.getStore();
            treePnl.getRootNode().appendChild(tree[0]);

        });
    },

    onTreeItemClick: function(dataview, record, item, index, e, eOpts) {
        //NOTE: It assumes that the leaf node will be a valid markdown file. Hence there is no check for .md
        if(record.data.leaf){

            Ext.getCmp('content-pnl').mask('loading');

            var path = record.data.blobpath;
            var ghUtil = Ext.create('SD.view.GitHubWrapper', {});

            //TODO: This needs ceanup. We need to get rid of the user name in the pen
            var html = "<iframe height='268' scrolling='no' src='http://codepen.io/ajit-kumar-azad/embed/{hash}/?height=268&theme-id=0' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 800px;'>See the Pen <a href='http://codepen.io/ajit-kumar-azad/pen/{hash}/'>{hash}</a> by Ajit Kumar (<a href='http://codepen.io/ajit-kumar-azad'>@ajit-kumar-azad</a>) on <a href='http://codepen.io'>CodePen</a>.</iframe>";
            var tpl =  Ext.dom.Helper.createTemplate(html);
            ghUtil.getFileContent('master', path, function(err, data) {

                //                     console.log('DATA: ', data);
                console.log('RECORD: ', record, item);
                var el = Ext.dom.Helper.createDom(data);


                var domEl = Ext.get(el);
                var hash = domEl.getAttribute('data-slug-hash');

                console.log('CODE: ', hash);

                var header = '<div class="slide head"><span class="logo"></span><h3>' + record.parentNode.data.text + '</h3><h2 class="slide">' + record.data.text + '</h2></div>';

                Ext.getCmp('content-pnl').setHtml(header + data);
                Ext.getCmp('content-pnl').addCls('markdown-body');

                //TODO: This needs ceanup. We need to get rid of the user name in the pen
                var elArr = Ext.dom.Query.select('a[href*=http://codepen.io/ajit-kumar-azad/pen]');
                for (var i = 0; i < elArr.length; i++) {
                    el = elArr[i];
                    console.log('HASH: ', Ext.get(el).getAttribute('text'));
                    console.log('EL: ', Ext.get(el).parent());

                    tpl.overwrite(Ext.get(el).parent(), {hash: Ext.get(el).getAttribute('text')});
                }

                Ext.getCmp('content-pnl').unmask();
            });
        } else {
            //It is a parent node...just create a dummy slide content from the node text

            //TODO: Make this configurable
            var html = '<div class="topic"><div class="head"><h1>' + record.data.text + '</h1></div><div class="footer">' +
            '2008 â€” 2015 Walking Tree Consultancy Services Pvt. Ltd. All rights reserved. This document is provided for the sole use of a named ' +
            'participant in a technical training course.  Any other use or reproduction of this document is ' +
            'unlawful without the express written consent of Walking Tree Consultancy Services Pvt. Ltd.</div></div>';
            Ext.getCmp('content-pnl').setHtml(html);

        }


    },

    onTreeMenuRender: function(component, eOpts) {
        component.setLoading(false);
    }

});
